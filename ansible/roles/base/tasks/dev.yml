---
- name: include packages
  ansible.builtin.import_tasks: packages.yml
  become: yes

- name: create some directories for later use
  ansible.builtin.file:
    path: '/home/{{ user }}/{{ item }}'
    state: directory
  loop:
    - 'dev'
    - '.local/share/nvim/site/autoload/'
    - '.mozilla/firefox'
    - '.config/systemd/user/'
      #- '.steam/steam/steamapps'
      
- name: clone dotfiles with a separate git dir
  ansible.builtin.git:
    repo: 'git@github.com:ckstevenson/dotfiles.git'
    accept_hostkey: yes # security risk
    separate_git_dir: '/home/{{ user }}/dev/dotfiles/'
    dest: '/home/{{ user }}/dotfiles-tmp'
      #version: 'dev'
      
- name: synchronize passing in extra rsync options
  ansible.posix.synchronize:
    src: '/home/{{ user }}/dotfiles-tmp/'
    dest: '/home/{{ user }}'
    rsync_opts:
      - "--exclude=.git"
  delegate_to: "{{ inventory_hostname }}"

- name: recursively remove directory
  ansible.builtin.file:
    path: '/home/{{ user }}/dotfiles-tmp/'
    state: absent

- name: clone development repositories from github
  ansible.builtin.git:
    repo: '{{ item.repo }}'
    accept_hostkey: yes # security risk
    dest: '{{ item.dest }}'
  loop: 
    - { dest: '/home/{{ user }}/dev/archinstall', repo: 'git@github.com:ckstevenson/archinstall.git' }
    - { dest: '/home/{{ user }}/.local/bin/', repo: 'git@github.com:ckstevenson/scripts.git' }
    - { dest: '/home/{{ user }}/dev/dmenu', repo: 'git@github.com:ckstevenson/dmenu.git' }
    - { dest: '/home/{{ user }}/dev/paru', repo: 'https://aur.archlinux.org/paru.git' }
    - { dest: '/home/{{ user }}/dev/st/', repo: 'git@github.com:ckstevenson/st.git' }

- name: install vim plug
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: '/home/{{ user }}/.local/share/nvim/site/autoload/plug.vim'

- name: create ssh-agent service
  ansible.builtin.copy:
    src: ssh-agent.service
    dest: '/home/{{ user }}/.config/systemd/user/ssh-agent.service'

- name: enable user services
  ansible.builtin.systemd:
    name: ssh-agent
    scope: user
    enabled: true

      #- name: Vagrant plugins
      #  ansible.builtin.shell: vagrant plugin install vagrant-libvirt

- name: git config
  ansible.builtin.shell: |
    git config --global user.name 'Cameron Stevenson'
    git config --global user.email 'cksteve@protonmail.com'

- name: Add user to the appropriate groups
  ansible.builtin.user:
    name: '{{ user }}'
    groups: libvirt,docker
  become: true

- name: enable system services
  ansible.builtin.systemd:
    name: docker
    enabled: true
  become: true
  loop: 
    - 'docker'
    - 'libvirtd'
