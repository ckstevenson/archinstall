---
- name: include packages
  ansible.builtin.import_tasks: packages.yml
  become: yes

    #- name: include packages
    #  ansible.builtin.import_tasks: aur.yml

- name: set authorized key for remote user copying it from current user
  ansible.posix.authorized_key:
    user: "{{ user }}"
    state: present
    key: '{{ item }}'
  with_file:
    - cameron.pub

- name: Create a ~/ssh directory if it does not exist
  ansible.builtin.file:
    path: "/home/{{ user }}/.ssh/"
    state: directory
    mode: '0700'

- name: copy private key
  ansible.builtin.copy:
    src: "{{ lookup('env','HOME') }}/.ssh/id_rsa"
    dest: "/home/{{ user }}/.ssh/id_rsa"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0400'

- name: create xdg default dirs
  ansible.builtin.command: xdg-user-dirs-update

- name: Add user to the appropriate groups
  ansible.builtin.user:
    name: '{{ user }}'
    groups: wheel
  become: true

- name: clone password store
  ansible.builtin.git:
    repo: '{{ item.repo }}'
    accept_hostkey: yes # security risk
    dest: '{{ item.dest }}'
  loop:
    - { dest: '/home/{{ user }}/.password_store', repo: 'git@10.10.10.221:/srv/git/pass.git' }

- name: Create ~/.cache/zsh
  ansible.builtin.file:
    path: "/home/{{ user }}/.cache/zsh/"
    state: directory
    mode: '0755'

- name: Create ~/.cache/zsh/history
  ansible.builtin.file:
    path: "/home/{{ user }}/.cache/zsh/history"
    state: touch
    mode: '0644'
